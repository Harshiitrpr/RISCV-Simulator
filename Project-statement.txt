Design and implement a function simulator in C/C++/Java/Python for 32-bit RISC-V
ISA instructions. Function simulator takes instruction encoding in a .mc file as
input. The .mc file has the following format:

<address of instruction><delimiter - space><machine code of the instruction>

All the instructions given in the input .mc file are executed as per the
functional behavior of the instructions. Each instruction must go through the
following phases:
 - Fetch
 - Decode
 - Execute
 - Memory
 - Writeback

Along with the execution of instruction stages, the simulator also provides
messages about what it is doing in each stage, implements an additional
instruction that exits the simulator, writes the data memory in the .mc file
before exiting.

You must test the software using the following assembly programs:
 - Fibonacci Program
 - Factorial Program
 - Bubble Sort Program

A template implementation is attached, containing a README file, a design
document, Makefile, and c code to start with. In the submission, you are
supposed to submit the source code and updated design document,  README,
and input test files. The overall project would be evaluated on:
 - Functional completeness
 - Documentation completeness
 - Testcase
